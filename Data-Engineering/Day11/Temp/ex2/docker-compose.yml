version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
    volumes:
      - ./data/zookeeper:/var/lib/zookeeper/data
    healthcheck:
      test: ["CMD", "bash", "-c", "echo srvr | nc localhost 2181 | grep -q 'Mode'"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    container_name: producer
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
    restart: on-failure
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=click_stream_data
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - PRODUCER_RATE=5.0
    volumes:
      - ./schemas:/app/schemas

  processor:
    build:
      context: .
      dockerfile: processor/Dockerfile
    container_name: processor
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
    restart: on-failure
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=click_stream_data
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - BIGQUERY_PROJECT=${BIGQUERY_PROJECT:-spartan-cosmos-457603-e0}
    volumes:
      - ./credentials:/app/credentials
      - ./schemas:/app/schemas

networks:
  default:
    name: kafka-avro-network
    driver: bridge
