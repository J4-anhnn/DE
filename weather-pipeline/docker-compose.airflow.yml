version: '3.8'

x-airflow-common: &airflow-common
  image: apache/airflow:2.6.0
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT: 'false'
    GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/creds/creds.json
    OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY}
    GCP_PROJECT_ID: ${GCP_PROJECT_ID}
    GCP_REGION: ${GCP_REGION:-asia-southeast1}
    BIGQUERY_DATASET: ${BIGQUERY_DATASET:-weather_data}
    GCS_RAW_BUCKET: ${GCS_RAW_BUCKET}
    GCS_PROCESSED_BUCKET: ${GCS_PROCESSED_BUCKET}
    GCS_TEMP_BUCKET: ${GCS_TEMP_BUCKET}
    PYTHONPATH: /opt/airflow
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./extract:/opt/airflow/extract
    - ./transform:/opt/airflow/transform
    - ./load:/opt/airflow/load
    - ./config:/opt/airflow/config
    - ./creds:/opt/airflow/creds:ro
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_WWW_USER_PASSWORD:-airflow}

volumes:
  postgres-db-volume:
